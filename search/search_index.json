{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to rag_kmk","text":"<p>A simple RAG implementation for educational purposes implemented by Murat Karakaya Akademi</p> <ul> <li>Free software: MIT License</li> <li>Documentation: https://kmkarakaya.github.io/rag-kmk</li> </ul>"},{"location":"#features","title":"Features","text":"<ul> <li>TODO</li> </ul>"},{"location":"changelog/","title":"Changelog","text":""},{"location":"changelog/#v001-date","title":"v0.0.1 - Date","text":"<p>Improvement:</p> <ul> <li>TBD</li> </ul> <p>New Features:</p> <ul> <li>TBD</li> </ul>"},{"location":"contributing/","title":"Contributing","text":"<p>Contributions are welcome, and they are greatly appreciated! Every little bit helps, and credit will always be given.</p> <p>You can contribute in many ways:</p>"},{"location":"contributing/#types-of-contributions","title":"Types of Contributions","text":""},{"location":"contributing/#report-bugs","title":"Report Bugs","text":"<p>Report bugs at https://github.com/kmkarakaya/rag-kmk/issues.</p> <p>If you are reporting a bug, please include:</p> <ul> <li>Your operating system name and version.</li> <li>Any details about your local setup that might be helpful in troubleshooting.</li> <li>Detailed steps to reproduce the bug.</li> </ul>"},{"location":"contributing/#fix-bugs","title":"Fix Bugs","text":"<p>Look through the GitHub issues for bugs. Anything tagged with <code>bug</code> and <code>help wanted</code> is open to whoever wants to implement it.</p>"},{"location":"contributing/#implement-features","title":"Implement Features","text":"<p>Look through the GitHub issues for features. Anything tagged with <code>enhancement</code> and <code>help wanted</code> is open to whoever wants to implement it.</p>"},{"location":"contributing/#write-documentation","title":"Write Documentation","text":"<p>rag-kmk could always use more documentation, whether as part of the official rag-kmk docs, in docstrings, or even on the web in blog posts, articles, and such.</p>"},{"location":"contributing/#submit-feedback","title":"Submit Feedback","text":"<p>The best way to send feedback is to file an issue at https://github.com/kmkarakaya/rag-kmk/issues.</p> <p>If you are proposing a feature:</p> <ul> <li>Explain in detail how it would work.</li> <li>Keep the scope as narrow as possible, to make it easier to implement.</li> <li>Remember that this is a volunteer-driven project, and that contributions are welcome :)</li> </ul>"},{"location":"contributing/#get-started","title":"Get Started!","text":"<p>Ready to contribute? Here's how to set up rag-kmk for local development.</p> <ol> <li> <p>Fork the rag-kmk repo on GitHub.</p> </li> <li> <p>Clone your fork locally:</p> <pre><code>$ git clone git@github.com:your_name_here/rag-kmk.git\n</code></pre> </li> <li> <p>Install your local copy into a virtualenv. Assuming you have     virtualenvwrapper installed, this is how you set up your fork for     local development:</p> <pre><code>$ mkvirtualenv rag-kmk\n$ cd rag-kmk/\n$ python setup.py develop\n</code></pre> </li> <li> <p>Create a branch for local development:</p> <pre><code>$ git checkout -b name-of-your-bugfix-or-feature\n</code></pre> <p>Now you can make your changes locally.</p> </li> <li> <p>When you're done making changes, check that your changes pass flake8     and the tests, including testing other Python versions with tox:</p> <pre><code>$ flake8 rag-kmk tests\n$ python setup.py test or pytest\n$ tox\n</code></pre> <p>To get flake8 and tox, just pip install them into your virtualenv.</p> </li> <li> <p>Commit your changes and push your branch to GitHub:</p> <pre><code>$ git add .\n$ git commit -m \"Your detailed description of your changes.\"\n$ git push origin name-of-your-bugfix-or-feature\n</code></pre> </li> <li> <p>Submit a pull request through the GitHub website.</p> </li> </ol>"},{"location":"contributing/#pull-request-guidelines","title":"Pull Request Guidelines","text":"<p>Before you submit a pull request, check that it meets these guidelines:</p> <ol> <li>The pull request should include tests.</li> <li>If the pull request adds functionality, the docs should be updated.     Put your new functionality into a function with a docstring, and add     the feature to the list in README.rst.</li> <li>The pull request should work for Python 3.8 and later, and     for PyPy. Check https://github.com/kmkarakaya/rag-kmk/pull_requests and make sure that the tests pass for all     supported Python versions.</li> </ol>"},{"location":"document_loader/","title":"document_loader module","text":""},{"location":"document_loader/#rag_kmk.knowledge_base.document_loader.load_documents","title":"<code>load_documents(directory_path)</code>","text":"<p>Loads documents from a specified directory. Supported file types are defined in CONFIG['supported_file_types']. Currently supports .txt, .pdf, and .docx files.</p> <ul> <li>directory_path (str): The path to the directory containing the documents to be loaded.</li> </ul> <ul> <li>list: A list of document contents as strings.</li> </ul> Source code in <code>rag_kmk/knowledge_base/document_loader.py</code> <pre><code>def load_documents(directory_path):\n    \"\"\"\n    Loads documents from a specified directory. Supported file types are defined in CONFIG['supported_file_types'].\n    Currently supports .txt, .pdf, and .docx files.\n\n    Parameters:\n    - directory_path (str): The path to the directory containing the documents to be loaded.\n\n    Returns:\n    - list: A list of document contents as strings.\n    \"\"\"\n    # Initialize the logger\n    logger = setup_logger('document_loader', 'rag-kmk\\\\rag_kmk\\\\logs\\\\document_loader.log')\n    documents = []\n\n    if not os.path.isdir(directory_path):\n        logger.error(f'{directory_path} is not a directory.')\n        return documents\n\n    for filename in os.listdir(directory_path):\n        file_path = os.path.join(directory_path, filename)\n        file_extension = os.path.splitext(filename)[1]\n\n        if file_extension in CONFIG['supported_file_types']:\n            try:\n                if file_extension == '.txt':\n                    with open(file_path, 'r') as file:\n                        document = file.read()\n                        documents.append(document)\n                        logger.info(f'Text document loaded successfully from {file_path}')\n                elif file_extension == '.pdf':\n                    with fitz.open(file_path) as doc:\n                        text = ''\n                        for page in doc:\n                            text += page.get_text()\n                        documents.append(text)\n                        logger.info(f'PDF document loaded successfully from {file_path}')\n                elif file_extension == '.docx':\n                    doc = Document(file_path)\n                    text = '\\n'.join([paragraph.text for paragraph in doc.paragraphs])\n                    documents.append(text)\n                    logger.info(f'DOCX document loaded successfully from {file_path}')\n            except Exception as e:\n                logger.error(f'Failed to load document from {file_path}: {e}')\n        else:\n            logger.warning(f'Skipping unsupported file type: {file_path}')\n\n    return documents\n</code></pre>"},{"location":"faq/","title":"FAQ","text":""},{"location":"installation/","title":"Installation","text":""},{"location":"installation/#stable-release","title":"Stable release","text":"<p>To install rag-kmk, run this command in your terminal:</p> <pre><code>pip install rag-kmk\n</code></pre> <p>This is the preferred method to install rag-kmk, as it will always install the most recent stable release.</p> <p>If you don't have pip installed, this Python installation guide can guide you through the process.</p>"},{"location":"installation/#from-sources","title":"From sources","text":"<p>To install rag-kmk from sources, run this command in your terminal:</p> <pre><code>pip install git+https://github.com/kmkarakaya/rag-kmk\n</code></pre>"},{"location":"run_rag_kmk/","title":"run_rag_kmk module","text":""},{"location":"run_rag_kmk/#rag_kmk.run_rag_kmk.main","title":"<code>main()</code>","text":"<p>This is the sample function to run the RAG-KMK</p> Source code in <code>rag_kmk/run_rag_kmk.py</code> <pre><code>def main():\n    '''\n        This is the sample function to run the RAG-KMK\n    '''       \n    print(\"CONFIG:\",   CONFIG   )  \n    for key in CONFIG.keys():\n        print(key, \":\", CONFIG[key], \"\\n\")\n</code></pre>"},{"location":"usage/","title":"Usage","text":"<p>To use rag-kmk in a project:</p> <pre><code>import rag_kmk\n</code></pre>"},{"location":"examples/intro/","title":"Intro","text":"In\u00a0[1]: Copied! <pre>print('Hello World!')\n</pre> print('Hello World!') <pre>Hello World!\n</pre>"}]}